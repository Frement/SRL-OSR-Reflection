type
  TPoint3D = record
    X, Y, Z: Integer;
  end;

  TBase = record
    __object: Integer;
    tile: TPoint;
  end;

var
  CURVESIN, CURVECOS: TIntegerArray;

function TPoint.inBox(B: TBox): Boolean;
begin
  result := pointInBox(self, B);
end;

function TPoint.getDistance(P: TPoint): Integer;
begin
  if (self.X < 128) or (self.Y < 128) or (self.X > 13056) or (self.Y > 13056) then
    exit(0);

  result := distance(self.X, self.Y, P.Y, P.Y);
end;

function TBase.getDistance(P: TPoint): Integer;
begin
  self.tile.getDistance(P);
end;

function Point3D(X, Y, Z: Integer): TPoint3D;
begin
  result.X := X;
  result.Y := Y;
  result.Z := Z;
end;

function String.removeFormatting: String;
var
  I: Integer;
  skip: Boolean;
begin
  for I := 1 to length(self) do begin
    if (self[I] = '<') then
      skip := True;

    if (skip) and (self[I] = '>') then
    begin
      skip := False;
      continue;
    end;

    if (skip) then
      continue;

    result := result + self[I];
  end;
  result := replace(result, '  ', ' ', [rfReplaceAll]);
end;

procedure MarkTime(var timer: Integer);
begin
  timer := getSystemTime;
end;

function TimeFromMark(timer: Integer): Integer;
begin
  result := (getSystemTime - timer);
end;
